using System;
using System.Data;
using System.Data.SqlClient;
using System.Web;


namespace NSW.Data
{
    public class LabelText
    {
        public string ID { get; set; }
        public string English { get; set; }
        public string Japanese { get; set; }

        private SqlConnection labelConn = new SqlConnection(NSW.Info.ConnectionInfo.ConnectionString);

        public LabelText()
        {
               
        }

        public LabelText(string identifier)
        {
            SqlConnection textConn = new SqlConnection(NSW.Info.ConnectionInfo.ConnectionString);
            try
            {
                DataSet ds = new DataSet();
                SqlCommand labelComm = textConn.CreateCommand();
                SqlDataAdapter adap = new SqlDataAdapter(labelComm);
                labelComm.CommandType = CommandType.Text;
                labelComm.CommandText = "Select * from tblLabelText where fldLabel_ID='" + identifier + "'";
                Log.WriteToLog(NSW.Info.ProjectInfo.ProjectLogType, "LabelText", labelComm.CommandText, LogEnum.Debug);
                // first find the user row in the database
                textConn.Open();
                adap.Fill(ds);
                textConn.Close();
                // assign values
                DataRow dr = ds.Tables[0].Rows[0];
                this.ID = dr["fldLabel_ID"].ToString();
                English = dr["fldLabel_English"].ToString();
                Japanese = dr["fldLabel_Japanese"].ToString();
            }
            catch (Exception x)
            {
                Log.WriteToLog(NSW.Info.ProjectInfo.ProjectLogType, "LabelText", x, LogEnum.Critical);
            }
            finally
            {
                if (textConn.State == ConnectionState.Open)
                    textConn.Close();
            }
        }

        public static string Text(string ID)
        {
            SqlConnection textConn = new SqlConnection(NSW.Info.ConnectionInfo.ConnectionString);
            try
            {
                DataSet ds = new DataSet();
                SqlCommand labelComm = textConn.CreateCommand();
                SqlDataAdapter adap = new SqlDataAdapter(labelComm);
                labelComm.CommandType = CommandType.Text;
                labelComm.CommandText = "Select * from tblLabelText where fldLabel_ID='" + ID + "'";
                // first find the user row in the database
                textConn.Open();
                adap.Fill(ds);
                textConn.Close();
                // assign values
                DataRow dr = ds.Tables[0].Rows[0];
                string language = HttpContext.Current.Request.Cookies["LanguageCookie"].Value.ToString();
                switch (language)
                {
                    case "English":
                        {
                            return dr["fldLabel_English"].ToString();
                        }
                    case "Japanese":
                        {
                            return dr["fldLabel_Japanese"].ToString();
                        }
                }
            }
            catch (Exception x)
            {
                Log.WriteToLog(NSW.Info.ProjectInfo.ProjectLogType, "LabelText.Text", x, LogEnum.Critical);
            }
            finally
            {
                if (textConn.State == ConnectionState.Open)
                    textConn.Close();
            }
            return string.Empty;
        }

        public void modifyLabel()
        {
            try
            {
                SqlCommand labelComm = labelConn.CreateCommand();
                labelComm.CommandType = CommandType.StoredProcedure;
                labelComm.CommandText = "modifyLabelText";
                // set all the parameters
                SqlParameter param = new SqlParameter();
                // assign values
                param = new SqlParameter("@id", this.ID);
                labelComm.Parameters.Add(param);
                param = new SqlParameter("@english", this.English);
                labelComm.Parameters.Add(param);
                param = new SqlParameter("@japanese", this.Japanese);
                labelComm.Parameters.Add(param);
                // execute the command
                labelConn.Open();
                labelComm.ExecuteNonQuery();
                labelConn.Close();
            }
            catch (Exception x)
            {
                Log.WriteToLog(NSW.Info.ProjectInfo.ProjectLogType, "LabelText.modifyLabel", x, LogEnum.Critical);
            }
            finally
            {
                if (labelConn.State == ConnectionState.Open)
                    labelConn.Close();
            }
        }

        public void deleteLabel(string ID)
        {
            try
            {
                SqlCommand labelComm = labelConn.CreateCommand();
                labelComm.CommandType = CommandType.StoredProcedure;
                labelComm.CommandText = "deleteLabelText";
                // set all the parameters
                SqlParameter param = new SqlParameter();
                // assign values
                param = new SqlParameter("@id", this.ID);
                labelComm.Parameters.Add(param);
                // execute the command
                labelConn.Open();
                labelComm.ExecuteNonQuery();
                labelConn.Close();
            }
            catch (Exception x)
            {
                Log.WriteToLog(NSW.Info.ProjectInfo.ProjectLogType, "LabelText.deleteLabel", x, LogEnum.Critical);
            }
            finally
            {
                if (labelConn.State == ConnectionState.Open)
                    labelConn.Close();
            }
        }
        public void insertLabel()
        {
            try
            {
                SqlCommand labelComm = labelConn.CreateCommand();
                labelComm.CommandType = CommandType.StoredProcedure;
                labelComm.CommandText = "insertLabelText";
                // set all the parameters
                SqlParameter param = new SqlParameter();
                // assign values
                param = new SqlParameter("@id", this.ID);
                labelComm.Parameters.Add(param);
                param = new SqlParameter("@english", this.English);
                labelComm.Parameters.Add(param);
                param = new SqlParameter("@japanese", this.Japanese);
                labelComm.Parameters.Add(param);
                // execute the command
                labelConn.Open();
                labelComm.ExecuteNonQuery();
                labelConn.Close();
            }
            catch (Exception x)
            {
                Log.WriteToLog(NSW.Info.ProjectInfo.ProjectLogType, "LabelText.insertLabel", x, LogEnum.Critical);
            }
            finally
            {
                if (labelConn.State == ConnectionState.Open)
                    labelConn.Close();
            }
        }
    }
}
